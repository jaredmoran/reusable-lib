/*!
 *  
 * Grid example
 * This basic grid format is totally extendable.
 * I left the media query and markup structure examples in here.
 * The current variable settings are just for example.
 *
 */

/* -- grid -- */

/* - grid: variables (set these values) - */
$min_width: 780px;
$min_width: 980px;
$gutter_half: 10px;
$inline_block_reset: 'Courier New', Monospace;
$inline_block_reset_spacing: -.65em;

/* - grid: structure - */
.inner,
.outer {
	margin: 0 auto;
	position: relative;
}
.inner {
	max-width: $min_width;
}
.outer {
	max-width: $max_width;
}
// This wraps cols for float clearing
.col-group:after {
	clear: both;
	content: '.';
	display: block;
	height: 0;
	visibility: hidden;
}
/* Do this for ie-legacy 7- to bring layout back ( hasLayout )
.col-group {
	zoom: 1;
}
*/
.col {
	float: left;
	position: relative;
}
.col-grid {
	font-family: $inline_block_reset;
	letter-spacing: $inline_block_reset_spacing;
	margin-left: -$gutter_half;
	margin-right: -$gutter_half;
	
	.col {
		display: inline-block;
		font-family: 'Helvetica Neue', Sans-serif;
		letter-spacing: normal;
		vertical-align: top;
		
		/* For ie7- this fixes non-support of inline-block
		display: inline;
		*/
	}
}
/* If supporting ie 7-
.ci {
	padding-left: $gutter_half;
	padding-right: $gutter_half;
}
*/
.last {
	float: right;
}
.col1of1 { float: none; }
.col1of2 { width: 50%; }
.col1of3 { width: 33.33333%; }
.col2of3 { width: 66.66666%; }
.col1of4 { width: 25%; }
.col3of4 { width: 75%; }
.col1of5 { width: 20%; }
.col2of5 { width: 40%; }
.col3of5 { width: 60%; }
.col4of5 { width: 80%; }

/*
<div class="col-group">
	<div class="col col1of2">
		<h1>hey</h1>
		<p></p>
		<div class="col-group">
			<div class="col col1of3">
			</div>
			<div class="col col1of3">
			</div>
			<div class="col col1of3">
			</div>
		</div>
	</div>
	<div class="col col1of2">
	</div>
</div>
*/

/*
@media (max-width: 320px) {
	body,
	.inner,
	.outer {
		min-width: 100%;
		max-width: 100%;
	}
	
	.col {
		display: block;
		float: none;
	}
}
*/